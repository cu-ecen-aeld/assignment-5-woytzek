#!/bin/sh

start_scull() {
    module="scull"
    device="scull"
    mode="664"

    # Group: since distributions do it differently, look for wheel or use staff
    if grep -q '^staff:' /etc/group; then
        group="staff"
    else
        group="wheel"
    fi

    # invoke insmod with all arguments we got
    # and use a pathname, as insmod doesn't look in . by default
    insmod /lib/modules/$(uname -r)/extra/$module.ko $* || exit 1

    # retrieve major number
    major=$(awk "\$2==\"$module\" {print \$1}" /proc/devices)

    # Remove stale nodes and replace them, then give gid and perms
    # Usually the script is shorter, it's scull that has several devices in it.

    rm -f /dev/${device}[0-3]
    mknod /dev/${device}0 c $major 0
    mknod /dev/${device}1 c $major 1
    mknod /dev/${device}2 c $major 2
    mknod /dev/${device}3 c $major 3
    ln -sf ${device}0 /dev/${device}
    chgrp $group /dev/${device}[0-3] 
    chmod $mode  /dev/${device}[0-3]
}

stop_scull() {
    module="scull"
    device="scull"

    # invoke rmmod with all arguments we got
    rmmod $module $* || exit 1

    # Remove stale nodes

    rm -f /dev/${device} /dev/${device}[0-3] 
    rm -f /dev/${device}priv
    rm -f /dev/${device}pipe /dev/${device}pipe[0-3]
    rm -f /dev/${device}single
    rm -f /dev/${device}uid
    rm -f /dev/${device}wuid
}

start_module() {
    module=$1
    device=$1
    mode="664"

    # Group: since distributions do it differently, look for wheel or use staff
    if grep -q '^staff:' /etc/group; then
        group="staff"
    else
        group="wheel"
    fi

    # invoke insmod with all arguments we got
    insmod /lib/modules/$(uname -r)/extra/$module.ko $* || exit 1

    # retrieve major number
    major=$(awk "\$2==\"$module\" {print \$1}" /proc/devices)

    if [ ! -z ${major} ]; then
        rm -f /dev/${device}
        mknod /dev/${device} c $major 0
        chgrp $group /dev/${device}
        chmod $mode  /dev/${device}
    else
        echo "No device found in /proc/devices for driver ${module} (this driver may not allocate a device)"
    fi
}

stop_module() {
    module=$1
    device=$1

    if [ $# -ne 1 ]; then
        echo "Wrong number of arguments"
        echo "usage: $0 module_name"
        echo "Will unload the module specified by module_name and remove assocaited device"
        exit 1
    fi

    # invoke rmmod with all arguments we got
    rmmod $module || exit 1

    # Remove stale nodes
    rm -f /dev/${device}
}

case $1 in
	start)
        start_scull
        start_module faulty
        insmod /lib/modules/$(uname -r)/extra/hello.ko || exit 1
		;;
	stop)
		stop_scull
        stop_module faulty
        rmmod hello || exit 1
		;;
	*)
		echo "Usage: $0 {start | stop}"
		exit 1
esac

exit 0

